Generic:
npx create-next-app@latest

Example:
npx create-next-app@latest nextjs-dashboard --use-npm --example "https://github.com/vercel/next-learn/tree/main/dashboard/starter-example"

Tutorial:
https://vercel.com/kevins-projects-577c7da6/nextapp
https://nextjs.org/learn/dashboard-app/optimizing-fonts-images
https://nextjs.org/learn/react-foundations/what-is-react-and-nextjs

Chapter 1: Getting started

$ npm -i # in same directory as package.json file
$ npm run dev
Then go to 
http://localhost:3000/


Chapter 2: CSS styling

/app/ui/global.css

import '@/app/ui/global.css';

Tailwind:
<div
  className="h-0 w-0 border-b-[30px] border-l-[20px] border-r-[20px] border-b-black border-l-transparent border-r-transparent"
/>

Modules:
/app/ui/home.module.css
import styles from '@/app/ui/home.module.css';
<div className={styles.shape} />;

clsx (conditionally apply styling):
import clsx from 'clsx';
 
export default function InvoiceStatus({ status }: { status: string }) {
  return (
    <span
      className={clsx(
        'inline-flex items-center rounded-full px-2 py-1 text-sm',
        {
          'bg-gray-100 text-gray-500': status === 'pending',
          'bg-green-500 text-white': status === 'paid',
        },
      )}
    >
    // ...
)}



Chapter 3: Optimising Fonts and Images

Adding a primary font:

/app/ui/fonts.ts
import { Inter } from 'next/font/google';
export const inter = Inter({ subsets: ['latin'] });

/app/layout.tsx
import '@/app/ui/global.css';
import { inter } from '@/app/ui/fonts';
 
export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <body className={`${inter.className} antialiased`}>{children}</body>
    </html>
  );
}

Images
/app/page.tsx
import Image from 'next/image';
      <Image
        src="/hero-desktop.png"
        width={1000}
        height={760}
        className="hidden md:block"
        alt="Screenshots of the dashboard project showing desktop version"
      />
      <Image
        src="/hero-mobile.png"
        width={1000}
        height={760}
        className="block md:hidden"
        alt="Screenshots of the dashboard project showing mobile version"
      />


Chapter 4: Creating Layouts and pages
Adding pages: (page.tsx is required name)
/app/dashboard/page.tsx
export default function Page() {
  return <p>Dashboard Page</p>;
}
http://localhost:3000/dashboard

Layouts
/app/dashboard/layout.tsx
import SideNav from '@/app/ui/dashboard/sidenav';
 
export default function Layout({ children }: { children: React.ReactNode }) {
  return (
    <div className="flex h-screen flex-col md:flex-row md:overflow-hidden">
      <div className="w-full flex-none md:w-64">
        <SideNav />
      </div>
      <div className="flex-grow p-6 md:overflow-y-auto md:p-12">{children}</div>
    </div>
  );
}

A few things are going on in this code, so let's break it down:

First, you're importing the <SideNav /> component into your layout. Any components you import into this file will be part of the layout.

The <Layout /> component receives a children prop. This child can either be a page or another layout. In your case, the pages inside /dashboard will automatically be nested inside a <Layout /> like so:

Root layout (required)
/app/layout.tsx
import '@/app/ui/global.css';
import { inter } from '@/app/ui/fonts';
 
export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <body className={`${inter.className} antialiased`}>{children}</body>
    </html>
  );
}

Chapter 5: Navigating between components

/app/ui/dashboard/nav-links.tsx
{links.map((link) => {
        const LinkIcon = link.icon;
        return (
          <Link
            key={link.name}
            href={link.href}
            className="flex h-[48px] grow items-center justify-center gap-2 rounded-md bg-gray-50 p-3 text-sm font-medium hover:bg-sky-100 hover:text-blue-600 md:flex-none md:justify-start md:p-2 md:px-3"
          >
            <LinkIcon className="w-6" />
            <p className="hidden md:block">{link.name}</p>
          </Link>
        );
      })}

Showing active links
/app/ui/dashboard/nav-links.tsx
'use client';
 
import {
  UserGroupIcon,
  HomeIcon,
  InboxIcon,
} from '@heroicons/react/24/outline';
import Link from 'next/link';
import { usePathname } from 'next/navigation';
import clsx from 'clsx';

// ...
export default function NavLinks() {
  const pathname = usePathname();
  // ...
  {links.map((link) => {
        const LinkIcon = link.icon;
        return (
          <Link
            key={link.name}
            href={link.href}
            className={clsx(
              'flex h-[48px] grow items-center justify-center gap-2 rounded-md bg-gray-50 p-3 text-sm font-medium hover:bg-sky-100 hover:text-blue-600 md:flex-none md:justify-start md:p-2 md:px-3',
              {
                'bg-sky-100 text-blue-600': pathname === link.href,
              },
            )}
          >
            <LinkIcon className="w-6" />
            <p className="hidden md:block">{link.name}</p>
          </Link>
        );
      })}
}


Chapter 6: Setting up your database

https://vercel.com/kevins-projects-577c7da6/nextapp
$ npm i @vercel/postgres 
/scripts/seed.js
/package.json
"scripts": {
  "build": "next build",
  "dev": "next dev",
  "start": "next start",
  "seed": "node -r dotenv/config ./scripts/seed.js"
},
$ npm run seed

Chapter 7: Fetching data
/app/lib/data.ts
https://nextjs.org/learn/dashboard-app/fetching-data

Chapter 8: Static and Dynamic Rendering
https://nextjs.org/learn/dashboard-app/static-and-dynamic-rendering

Chapter 9: Streaming
https://nextjs.org/learn/dashboard-app/streaming

Chapter 11: Search and pagination
https://nextjs.org/learn/dashboard-app/adding-search-and-pagination

Chapter 12: Mutating data
https://nextjs.org/learn/dashboard-app/mutating-data

Chapter 13: Handling errors
https://nextjs.org/learn/dashboard-app/error-handling

Chapter 14: Improving accessibility
https://nextjs.org/learn/dashboard-app/improving-accessibility

Chapter 15: Adding authentication
https://nextjs.org/learn/dashboard-app/adding-authentication

Chapter 16: Adding metadata
https://nextjs.org/learn/dashboard-app/adding-metadata

Chapter 17: Next steps
https://nextjs.org/learn/dashboard-app/next-steps

